{"version":3,"sources":["components/inputField.js","components/radioButton.js","App.js","reportWebVitals.js","components/display.js","index.js"],"names":["InputField","value","label","type","onChange","className","TextField","id","autoComplete","defaultProps","placeholder","Radiobtn","FormControl","component","RadioGroup","row","name","FormControlLabel","control","Radio","App","useState","users","setUsers","firstname","setFirst","lastname","setLast","email","setEmail","gender","setGender","firstError","setFirstError","lastError","setLastError","emailError","setEmailError","React","open","setOpen","useEffect","JSON","parse","window","localStorage","getItem","setItem","stringify","AppBar","style","background","position","Toolbar","variant","onSubmit","e","preventDefault","re","firsterror","lasterror","emailerror","test","handleValidate","length","first","trim","last","Grid","container","item","xs","target","fontSize","color","Button","disabled","class","Link","to","Dialog","onClose","DialogTitle","DialogActions","autoFocus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Display","handleClose","openSnack","setOpenSnack","DelSnack","setDelSnack","currentUsers","setCurrentUsers","handleUpdateTodo","updatedUser","updatedItem","map","user","backgroundColor","startIcon","scope","IconButton","onClick","handleClickOpen","removeItem","filter","alert","handleDeleteClick","fullWidth","maxWidth","DialogContent","Snackbar","autoHideDuration","message","ReactDOM","render","StrictMode","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.20ffe771.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@mui/material/TextField';\r\nimport './display.css';\r\n\r\nconst InputField = ({ value, label, type, onChange }) => {\r\n\r\n    return (\r\n        <div className=\"form-group\">\r\n            {label && <h5>{label}</h5>}\r\n            <TextField className=\"inputstyle\" label={label} id=\"outlined-required\" type={type} value={value} onChange={onChange} autoComplete=\"off\" />\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nInputField.propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nInputField.defaultProps = {\r\n    value: '',\r\n    label: '',\r\n    placeholder: '',\r\n    type: 'text'\r\n}\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './display.css';\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\n\r\n\r\nconst Radiobtn = ({ value, label, onChange }) => {\r\n\r\n    return (\r\n        <div className=\"radiobtn\">\r\n            {label && <h5>{label}</h5>}\r\n\r\n            <FormControl component=\"fieldset\">\r\n                <RadioGroup className=\"btn btn-dark \" row aria-label=\"gender\" name=\"row-radio-buttons-group\" value={value} onChange={onChange}>\r\n                    <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\r\n                    <FormControlLabel value=\"female\" control={<Radio />} label=\"Female\" />\r\n                </RadioGroup>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nRadiobtn.propTypes = {\r\n    value: PropTypes.string,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nRadiobtn.defaultProps = {\r\n    value: '',\r\n    label: ''\r\n}\r\n\r\nexport default Radiobtn;","import React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport { BrowserRouter, Link } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport InputField from \"./components/inputField\";\nimport Radiobtn from './components/radioButton';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogTitle from '@mui/material/DialogTitle';\n//Toolbar\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport { Grid } from '@material-ui/core';\nimport CheckSharpIcon from '@mui/icons-material/CheckSharp';\n\n\nexport const App = () => {\n\n\n  const [users, setUsers] = useState([]);\n  const [firstname, setFirst] = useState(\"\");\n  const [lastname, setLast] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n\n  //error states\n  const [firstError, setFirstError] = useState(\"\");\n  const [lastError, setLastError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n\n\n  //Dialog functionality\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  //Form validation\n  const handleValidate = (e) => {\n    const re = /^[A-Za-z]+$/;\n    const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    let firsterror = \"\";\n    let lasterror = \"\";\n    let emailerror = \"\";\n\n    if (!re.test(firstname)) {\n      firsterror = \"*Only characters are allowed\";\n      setFirstError(firsterror);\n    } else {\n      setFirstError(\"\");\n    }\n\n    if (!re.test(lastname)) {\n      lasterror = \"*Only characters are allowed\";\n      setLastError(lasterror);\n    } else {\n      setLastError(\"\");\n    }\n\n    if (!regex.test(email)) {\n      emailerror = \"*Please enter a valid email\";\n      setEmailError(emailerror);\n    } else {\n      setEmailError(\"\");\n    }\n\n    if (firsterror || lasterror || emailerror) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = handleValidate();\n    if (isValid) {\n      setOpen(true);\n      setUsers([\n        ...users,\n        {\n          id: users.length + 1,\n          first: firstname.trim(),\n          last: lastname.trim(),\n          email: email.trim(),\n          gender: gender.trim()\n        }\n      ]);\n      setFirst(\"\");\n      setLast(\"\");\n      setEmail(\"\");\n      setGender(\"\");\n      setFirstError(\"\");\n      setLastError(\"\");\n    }\n\n  }\n\n  //For accessing data from local storage to state concurrently\n  useEffect(() => {\n    setUsers(JSON.parse(window.localStorage.getItem(\"users\")));\n  }, []);\n\n  //For storing the data in local storage\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users])\n\n\n\n  return (\n    <div className=\"container\">\n      <AppBar style={{ background: '#2E3B55' }} position=\"static\">\n        <Toolbar variant=\"dense\">\n          <span className=\"navtext\">Enter User Data</span>\n        </Toolbar>\n      </AppBar>\n\n\n      <form className=\"form_center\" onSubmit={handleSubmit}>\n        <Grid container>\n          <Grid item xs={6}>\n\n            <div className=\"container\">\n\n              <InputField value={firstname} id=\"firstname\" placeholder=\"firstname\" type=\"text\" label=\"First Name*\" onChange={(e) => setFirst(e.target.value)} />\n              {firstError ? (<div style={{ fontSize: 15, color: 'red' }}>{firstError}</div>\n              ) : null}\n              <br />\n\n              <InputField value={lastname} id=\"lastname\" placeholder=\"lastname\" type=\"text\" label=\"Last Name*\" onChange={(e) => setLast(e.target.value)} />\n              {lastError ? (<div style={{ fontSize: 15, color: 'red' }}>{lastError}</div>\n              ) : null}\n              <br />\n\n              <InputField value={email} id=\"email\" placeholder=\"email\" type=\"text\" label=\"Email*\" onChange={(e) => setEmail(e.target.value)} />\n              {emailError ? (<div style={{ fontSize: 15, color: 'red' }}>{emailError}</div>\n              ) : null}\n              <br />\n\n            </div>\n\n          </Grid>\n          <Grid item xs={6}>\n\n            <div className=\"container\">\n\n              <Radiobtn value={gender} id=\"gender\" placeholder=\"gender\" label=\"Gender*\" onChange={(e) => setGender(e.target.value)} />\n              <br />\n\n              <Button variant=\"contained\" type=\"submit\" disabled={!firstname || !lastname || !email || !gender} >Submit</Button>\n\n              <div class=\"divider\" />\n\n              <Button variant=\"contained\" className=\"sub-btn\" component={Link} to=\"/display\">Cancel</Button>\n              <br />\n\n            </div>\n\n          </Grid>\n\n        </Grid>\n      </form>\n\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\n\n        <DialogTitle >\n          <div class=\"content\">\n            User created sucessfully\n            <CheckSharpIcon />\n          </div>\n        </DialogTitle>\n\n        <DialogActions>\n          <Button component={Link} to=\"/display\" autoFocus>\n            Ok\n          </Button>\n        </DialogActions>\n\n      </Dialog>\n\n\n\n    </div>\n\n\n\n\n  );\n}\n\nexport default App;\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react';\r\nimport './display.css';\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\nimport InputField from './inputField';\r\nimport Radiobtn from './radioButton';\r\n//Buttons\r\nimport Button from '@mui/material/Button';\r\nimport ModeEditIcon from '@mui/icons-material/ModeEdit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { IconButton } from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\n//Dialog button\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\n//Toolbar\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Snackbar from '@mui/material/Snackbar';\r\n\r\n\r\nexport const Display = () => {\r\n\r\n    //error states\r\n    const [firstError, setFirstError] = useState(\"\");\r\n    const [lastError, setLastError] = useState(\"\");\r\n    const [emailError, setEmailError] = useState(\"\");\r\n\r\n    const [users, setUsers] = useState(() => {\r\n\r\n        const users = localStorage.getItem(\"users\");\r\n\r\n        if (users) {\r\n            return JSON.parse(users);\r\n        } else {\r\n            return [];\r\n        }\r\n\r\n    });\r\n\r\n    //For dialog to open\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = (user) => {\r\n        setOpen(true);\r\n        setCurrentUsers({ ...user });\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    //For snackbar to open\r\n    const [openSnack, setOpenSnack] = React.useState(false);\r\n    const [DelSnack, setDelSnack] = React.useState(false);\r\n\r\n    //Edit form error handling\r\n\r\n    const handleValidate = (e) => {\r\n        const re = /^[A-Za-z]+$/;\r\n        const regex = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n        let firsterror = \"\";\r\n        let lasterror = \"\";\r\n        let emailerror = \"\";\r\n\r\n        if (!re.test(currentUsers.first)) {\r\n            firsterror = \"*Only characters are allowed\";\r\n            setFirstError(firsterror);\r\n        } else {\r\n            setFirstError(\"\");\r\n        }\r\n\r\n        if (!re.test(currentUsers.last)) {\r\n            lasterror = \"*Only characters are allowed\";\r\n            setLastError(lasterror);\r\n        } else {\r\n            setLastError(\"\");\r\n        }\r\n\r\n        if (!regex.test(currentUsers.email)) {\r\n            emailerror = \"*Please enter a valid email\";\r\n            setEmailError(emailerror);\r\n        } else {\r\n            setEmailError(\"\");\r\n        }\r\n\r\n        if (firsterror || lasterror || emailerror) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n\r\n    }\r\n\r\n    //Editing functionality\r\n\r\n\r\n    const [currentUsers, setCurrentUsers] = useState({});\r\n\r\n    const handleEditFirstInputChange = (e) => {\r\n        setCurrentUsers({ ...currentUsers, first: e.target.value });\r\n    }\r\n\r\n    const handleEditLastInputChange = (e) => {\r\n        setCurrentUsers({ ...currentUsers, last: e.target.value });\r\n    }\r\n\r\n    const handleEditEmailInputChange = (e) => {\r\n        setCurrentUsers({ ...currentUsers, email: e.target.value });\r\n    }\r\n\r\n    const handleEditGenderInputChange = (e) => {\r\n        setCurrentUsers({ ...currentUsers, gender: e.target.value });\r\n    }\r\n\r\n    const handleEditFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = handleValidate();\r\n        if (isValid) {\r\n            setOpen(false);\r\n            setOpenSnack(true);\r\n            handleUpdateTodo(currentUsers.id, currentUsers);\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpdateTodo = (id, updatedUser) => {\r\n        const updatedItem = users.map((user) => {\r\n            return user.id === id ? updatedUser : user;\r\n        });\r\n        setUsers(updatedItem);\r\n    }\r\n\r\n\r\n\r\n    //Delete functionality\r\n\r\n    const handleDeleteClick = (id) => {\r\n        const removeItem = users.filter((user) => {\r\n            return user.id !== id;\r\n        })\r\n        setUsers(removeItem);\r\n        alert(\"Do you want to proceed?\");\r\n        setDelSnack(true);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n        setUsers(users);\r\n    }, [users])\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n\r\n            <AppBar style={{ background: '#2E3B55' }} position=\"static\">\r\n                <Toolbar variant=\"dense\">\r\n                    <span className=\"navtext\">User Data</span>\r\n                    <div className=\"create-button\">\r\n                        <Button component={Link} to=\"/userform\" style={{ backgroundColor: '#FFFFFF', color: '#0000FF' }} variant=\"contained\" startIcon={<AddIcon color=\"primary\" />}>\r\n                            Create User\r\n                        </Button>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            {users !== null ?\r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Firstname</th>\r\n                            <th scope=\"col\">Lastname</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Gender</th>\r\n                            <th scope=\"col\">Edit</th>\r\n                            <th scope=\"col\">Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user.id}>\r\n                                <th scope=\"row\">{user.id}</th>\r\n                                <td>{user.first}</td>\r\n                                <td>{user.last}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.gender}</td>\r\n                                <td>\r\n                                    <IconButton variant=\"contained\" onClick={() => handleClickOpen(user)}>\r\n                                        <ModeEditIcon />\r\n                                    </IconButton>\r\n                                </td>\r\n                                <td>\r\n                                    <IconButton variant=\"contained\" onClick={() => handleDeleteClick(user.id)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table> : <h6>No user data found</h6>}\r\n\r\n\r\n\r\n            <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose} aria-labelledby=\"alert-dialog-title\" aria-describedby=\"alert-dialog-description\">\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <h5>\r\n                        Edit user form\r\n                    </h5>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form onSubmit={handleEditFormSubmit}>\r\n\r\n                        <InputField value={currentUsers.first} onChange={handleEditFirstInputChange} id=\"firstname\" placeholder=\"First Name\" type=\"text\" label=\"First Name\" />\r\n                        {firstError ? (<div style={{ fontSize: 15, color: 'red' }}>{firstError}</div>\r\n                        ) : null}\r\n                        <br />\r\n\r\n                        <InputField value={currentUsers.last} onChange={handleEditLastInputChange} id=\"lastname\" placeholder=\"Last Name\" type=\"text\" label=\"Last Name\" />\r\n                        {lastError ? (<div style={{ fontSize: 15, color: 'red' }}>{lastError}</div>\r\n                        ) : null}\r\n                        <br />\r\n\r\n                        <InputField value={currentUsers.email} onChange={handleEditEmailInputChange} id=\"email\" placeholder=\"Email\" type=\"email\" label=\"Email\" />\r\n                        {emailError ? (<div style={{ fontSize: 15, color: 'red' }}>{emailError}</div>\r\n                        ) : null}\r\n                        <br />\r\n\r\n                        <Radiobtn value={currentUsers.gender} onChange={handleEditGenderInputChange} id=\"gender\" label=\"Gender\" />\r\n                        <br />\r\n\r\n                        <Button variant=\"contained\" type=\"submit\" class=\"btn btn-primary\">\r\n                            Save\r\n                        </Button>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button variant=\"contained\" class=\"btn btn-primary\" onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n\r\n            <Snackbar open={openSnack} autoHideDuration={6000} onClose={() => setOpenSnack(false)} message=\"User details edited sucessfully!\" />\r\n            <Snackbar open={DelSnack} autoHideDuration={6000} onClose={() => setDelSnack(false)} message=\"User deleted sucessfully!\" />\r\n\r\n        </div >\r\n    );\r\n}\r\n\r\n\r\nexport default Display;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Display from './components/display';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Routes>\n        <Route path='/' element={<Display />} />\n        <Route path='/userform' element={<App />} />\n        <Route path='/display' element={<Display />} />\n      </Routes>\n    </Router>\n\n  </React.StrictMode>,\n\n\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}